{"version":3,"file":"test.js","sources":["pages/test/test.vue","../../HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvdGVzdC90ZXN0LnZ1ZQ"],"sourcesContent":["<template>\n\t<view class=\"page-container\">\n\t\t<view class=\"header\">\n\t\t\t<!-- <text class=\"title\">《{{book.Book_Name}}》图鉴</text> -->\n\t\t</view>\n\t\t<view class=\"content\">\n\t\t\t<view class=\"chart-wrapper\">\n\t\t\t\t<l-echart ref=\"chartRef\"></l-echart>\n\t\t\t</view>\n\t\t\t<view class=\"description-section\">\n\t\t\t\t<text class=\"section-title\">世界观介绍</text>\n\t\t\t\t<text class=\"section-content\">这里可以是关于世界观的详细介绍。</text>\n\t\t\t</view>\n\t\t\t<view class=\"description-section\">\n\t\t\t\t<text class=\"section-title\">科技观介绍</text>\n\t\t\t\t<text class=\"section-content\">这里可以是关于科技观的详细介绍。</text>\n\t\t\t</view>\n\t\t</view>\n\t</view>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport * as echarts from 'echarts';\n\nexport default {\n  setup() {\n    const chartRef = ref(null);\n\n    // Function to fetch and register the SVG map\n    const fetchAndRegisterMap = async () => {\n      try {\n        const response = await uni.request({\n          url: 'https://echarts.apache.org/examples/data/asset/geo/Map_of_Iceland.svg',\n          method: \"GET\",\n        });\r\n\t\tconsole.log(response);\n\n        if (response && response.data) {\n          const svg = response.data;\n          echarts.registerMap('iceland_svg', { svg });\n\n          // Define the chart options\n          let option = {\n            tooltip: {},\n            geo: {\n              tooltip: {\n                show: true,\n              },\n              map: 'iceland_svg',\n              roam: true,\n            },\n            series: {\n              type: 'custom',\n              coordinateSystem: 'geo',\n              geoIndex: 0,\n              zlevel: 1,\n              data: [\n                [488.2358421078053, 459.70913833075736, 100],\n                [770.3415644319939, 757.9672194986475, 30],\n                [1180.0329284196291, 743.6141808346214, 80],\n                [894.03790632245, 1188.1985153835008, 61],\n                [1372.98925630313, 477.3839988649537, 70],\n                [1378.62251255796, 935.6708486282843, 81],\n              ],\n              renderItem(params, api) {\n                const coord = api.coord([api.value(0, params.dataIndex), api.value(1, params.dataIndex)]);\n                const circles = [];\n                for (let i = 0; i < 5; i++) {\n                  circles.push({\n                    type: 'circle',\n                    shape: {\n                      cx: 0,\n                      cy: 0,\n                      r: 30,\n                    },\n                    style: {\n                      stroke: 'red',\n                      fill: 'none',\n                      lineWidth: 2,\n                    },\n                    keyframeAnimation: {\n                      duration: 4000,\n                      loop: true,\n                      delay: (-i / 4) * 4000,\n                      keyframes: [\n                        {\n                          percent: 0,\n                          scaleX: 0,\n                          scaleY: 0,\n                          style: { opacity: 1 },\n                        },\n                        {\n                          percent: 1,\n                          scaleX: 1,\n                          scaleY: 0.4,\n                          style: { opacity: 0 },\n                        },\n                      ],\n                    },\n                  });\n                }\n                return {\n                  type: 'group',\n                  x: coord[0],\n                  y: coord[1],\n                  children: [\n                    ...circles,\n                    {\n                      type: 'path',\n                      shape: {\n                        d: 'M16 0c-5.523 0-10 4.477-10 10 0 10 10 22 10 22s10-12 10-22c0-5.523-4.477-10-10-10zM16 16c-3.314 0-6-2.686-6-6s2.686-6 6-6 6 2.686 6 6-2.686 6-6 6z',\n                        x: -10,\n                        y: -35,\n                        width: 20,\n                        height: 40,\n                      },\n                      style: {\n                        fill: 'red',\n                      },\n                      keyframeAnimation: {\n                        duration: 1000,\n                        loop: true,\n                        delay: Math.random() * 1000,\n                        keyframes: [\n                          { y: -10, percent: 0.5, easing: 'cubicOut' },\n                          { y: 0, percent: 1, easing: 'bounceOut' },\n                        ],\n                      },\n                    },\n                  ],\n                };\n              },\n            },\n          };\n\n          // After the SVG is loaded, initialize the chart\n          if (chartRef.value) {\n            const myChart = await chartRef.value.init(echarts);\n            myChart.setOption(option);\n          }\n        } else {\n          console.error(\"Failed to fetch SVG data.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    // Use the onMounted lifecycle hook to call the async function after the component is mounted\n    onMounted(() => {\n      fetchAndRegisterMap();  // Call the function after component is mounted\n    });\n\n    return {\n      chartRef,\n    };\n  },\n};\n</script>\n\n<style scoped>\n/* Add your styles here */\n</style>\n","import MiniProgramPage from 'E:/uniapp工作空间/Science _fiction/pages/test/test.vue'\nwx.createPage(MiniProgramPage)"],"names":["_sfc_main","chartRef","ref","fetchAndRegisterMap","response","uni","svg","echarts.registerMap","option","params","api","coord","circles","i","echarts","error","onMounted","MiniProgramPage"],"mappings":"uDAyBKA,EAAU,CACb,OAAQ,CACN,MAAMC,EAAWC,MAAI,IAAI,EAGnBC,EAAsB,SAAY,CACtC,GAAI,CACF,MAAMC,EAAW,MAAMC,EAAG,MAAC,QAAQ,CACjC,IAAK,wEACL,OAAQ,KACV,CAAC,EAGD,GAFNA,EAAAA,MAAY,MAAA,MAAA,4BAAAD,CAAQ,EAEVA,GAAYA,EAAS,KAAM,CAC7B,MAAME,EAAMF,EAAS,KACrBG,EAAAA,YAAoB,cAAe,CAAE,IAAAD,CAAE,CAAG,EAG1C,IAAIE,EAAS,CACX,QAAS,CAAE,EACX,IAAK,CACH,QAAS,CACP,KAAM,EACP,EACD,IAAK,cACL,KAAM,EACP,EACD,OAAQ,CACN,KAAM,SACN,iBAAkB,MAClB,SAAU,EACV,OAAQ,EACR,KAAM,CACJ,CAAC,kBAAmB,mBAAoB,GAAG,EAC3C,CAAC,kBAAmB,kBAAmB,EAAE,EACzC,CAAC,mBAAoB,kBAAmB,EAAE,EAC1C,CAAC,gBAAiB,mBAAoB,EAAE,EACxC,CAAC,iBAAkB,kBAAmB,EAAE,EACxC,CAAC,iBAAkB,kBAAmB,EAAE,CACzC,EACD,WAAWC,EAAQC,EAAK,CACtB,MAAMC,EAAQD,EAAI,MAAM,CAACA,EAAI,MAAM,EAAGD,EAAO,SAAS,EAAGC,EAAI,MAAM,EAAGD,EAAO,SAAS,CAAC,CAAC,EAClFG,EAAU,CAAA,EAChB,QAASC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,EAAQ,KAAK,CACX,KAAM,SACN,MAAO,CACL,GAAI,EACJ,GAAI,EACJ,EAAG,EACJ,EACD,MAAO,CACL,OAAQ,MACR,KAAM,OACN,UAAW,CACZ,EACD,kBAAmB,CACjB,SAAU,IACV,KAAM,GACN,MAAQ,CAACC,EAAI,EAAK,IAClB,UAAW,CACT,CACE,QAAS,EACT,OAAQ,EACR,OAAQ,EACR,MAAO,CAAE,QAAS,CAAG,CACtB,EACD,CACE,QAAS,EACT,OAAQ,EACR,OAAQ,GACR,MAAO,CAAE,QAAS,CAAG,CACtB,CACF,CACF,CACH,CAAC,EAEH,MAAO,CACL,KAAM,QACN,EAAGF,EAAM,CAAC,EACV,EAAGA,EAAM,CAAC,EACV,SAAU,CACR,GAAGC,EACH,CACE,KAAM,OACN,MAAO,CACL,EAAG,qJACH,EAAG,IACH,EAAG,IACH,MAAO,GACP,OAAQ,EACT,EACD,MAAO,CACL,KAAM,KACP,EACD,kBAAmB,CACjB,SAAU,IACV,KAAM,GACN,MAAO,KAAK,OAAM,EAAK,IACvB,UAAW,CACT,CAAE,EAAG,IAAK,QAAS,GAAK,OAAQ,UAAY,EAC5C,CAAE,EAAG,EAAG,QAAS,EAAG,OAAQ,WAAa,CAC1C,CACF,CACF,CACF,EAEJ,CACF,GAICX,EAAS,QACK,MAAMA,EAAS,MAAM,KAAKa,EAAO,OAAA,GACzC,UAAUN,CAAM,OAG1BH,EAAAA,MAAA,MAAA,QAAA,6BAAc,2BAA2B,CAE3C,OAAOU,EAAO,CACdV,EAAA,MAAA,MAAA,QAAA,6BAAc,uBAAwBU,CAAK,CAC7C,GAIFC,OAAAA,EAAAA,UAAU,IAAM,CACdb,GACF,CAAC,EAEM,CACL,SAAAF,EAEH,CACH,wQC7JA,GAAG,WAAWgB,CAAe"}